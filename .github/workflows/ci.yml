name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  TESTING_PLUGINS_VERSION: "1.6.2"

jobs:
  rustfmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Check formatting
        run: |
          cargo fmt -- --version
          cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Prepare test resources
        shell: bash
        run: |
          curl -sSfLO "https://github.com/Ortham/testing-plugins/archive/${{ env.TESTING_PLUGINS_VERSION }}.zip"
          7z x "${{ env.TESTING_PLUGINS_VERSION }}.zip"
          mv "testing-plugins-${{ env.TESTING_PLUGINS_VERSION }}" testing-plugins

      - name: Run clippy
        run: |
          cargo clippy -- --version
          cargo clippy --all --all-targets -- -Dwarnings

  build:
    strategy:
      matrix:
        os:
          - windows-2019
          - ubuntu-24.04

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cbindgen
        run: cargo install --force cbindgen --version 0.27.0

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
        if: startsWith(runner.os, 'Linux')

      - name: Prepare test resources
        shell: bash
        run: |
          curl -sSfLO "https://github.com/Ortham/testing-plugins/archive/${{ env.TESTING_PLUGINS_VERSION }}.zip"
          7z x "${{ env.TESTING_PLUGINS_VERSION }}.zip"
          mv "testing-plugins-${{ env.TESTING_PLUGINS_VERSION }}" testing-plugins

      - name: Build and run tests
        run: cargo test --all --all-features
        if: "!startsWith(runner.os, 'Linux')"

      - name: Build and run tests with code coverage
        run: cargo llvm-cov --workspace --lcov --output-path lcov.info
        if: startsWith(runner.os, 'Linux')

      - name: Upload code coverage to Coveralls
        uses: coverallsapp/github-action@v2
        if: startsWith(runner.os, 'Linux')

      # Need to rebuild the FFI wrapper so that its binary is given a filename
      # without a hash.
      - name: Build FFI wrapper
        shell: bash
        run: |
          cargo build --manifest-path ffi/Cargo.toml
          cbindgen ffi/ -o ffi/include/esplugin.h

      - name: Build and run C++ tests
        shell: bash
        run: |
          cmake -B ffi/build ffi
          cmake --build ffi/build
          ctest --test-dir ffi/build --output-on-failure
